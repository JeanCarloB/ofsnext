:- use_module(library(http/thread_httpd)).
:- use_module(library(http/http_dispatch)).
:- use_module(library(http/http_json)).
:- use_module(library(http/http_files)).
:- use_module(library(date)).

% Directorio donde se encuentran los archivos OFS transpilados.
ofs_directory('./transpiled_ofs').

% Función para servir archivos OFS y agregar un comentario al inicio con un timestamp.
serve_ofs(Request) :-
    http_parameters(Request, [file(File, [string])]),
    ofs_directory(Directory),
    atomic_list_concat([Directory, '/', File], FilePath),
    read_file_to_string(FilePath, OFSContent, []),
    get_time(TimeStamp),
    stamp_date_time(TimeStamp, DateTime, 'UTC'),
    format_time(atom(TimeString), '%FT%TZ', DateTime),
    format(atom(Comment), '// Generated by Prolog OFS 1.5 transpiler ~w~n', [TimeString]),
    format(atom(FullContent), '~w~w', [Comment, OFSContent]),
    reply_json_dict(_{content: FullContent}).

% Inicia el servidor en un puerto específico (por ejemplo, 8080).
start_server(Port) :-
    http_server(http_dispatch, [port(Port)]).

% Iniciar el servidor en un puerto específico.
:- initialization(start_server(8080)).
